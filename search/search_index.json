{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cahier de texte","text":""},{"location":"#avertissement","title":"Avertissement :","text":"<p>Ce site s'adresse au groupe des \u00e9l\u00e8ves de premi\u00e8re du lyc\u00e9e Notre Dame du Mur qui suivent l'enseignement de sp\u00e9cialit\u00e9 Num\u00e9rique et Sciences Informatiques.</p> <p></p>"},{"location":"#du-0401","title":"Du 04/01","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li> <p>R\u00e9alisation dans Obsidian avec le module compl\u00e9mentaire Spaced Repetition de flashcards partag\u00e9es pour r\u00e9viser...</p> </li> <li> <p>Pour s'entrainer encore sur les bases de donn\u00e9es et le langage SQL ;</p> </li> <li> <p>Regarder la vid\u00e9o les arbres binaires de recherche ;</p> </li> <li> <p>Lire et Faire les activit\u00e9s \u200bdu notebook Structure_Arborescente  ;</p> </li> <li> <p>faire l'exercice 1 ;</p> </li> </ul> <ul> <li>Rendre les travaux de m\u00e9mo SQL et SQL-Exercice_Bibliotheque ;</li> <li>Reprendre en main d'ipycanvas  ;</li> <li>Faire les activit\u00e9s de Fractals_trees_avec_ipycanvas  ;</li> <li>Faire les activit\u00e9s de Let_it_snow  ;</li> <li>Faire les activit\u00e9s de L-Systeme  ;</li> </ul>"},{"location":"#du-02-au-1612","title":"Du 02 au 16/12","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>Regarder la vid\u00e9o et r\u00e9pondre aux questions de cette introduction aux BDR ;</li> <li>S'inscrire sur la Khan Academy et rejoindre la classe TNSI_2022-2023 code RY4Q5NZX pour faire les activit\u00e9s d'initiation \u00e0 la programmation en langage SQL ;</li> <li>Faire les activit\u00e9s \u200bdu notebook SQL-Structured_Query_Language  ;</li> <li>Lire le notebook BDR-Bases_de_Donnees_Relationnelles  ;</li> <li>Regarder les vid\u00e9os :<ul> <li>Qu'est ce qu'une base de donnees relationnelle ? ;</li> <li>Interrogation d'une base de donnees relationnelle ;</li> </ul> </li> <li>Faire SQL-Exercice_Bibliotheque ;</li> <li>S'entrainer encore sur les sites :<ul> <li>https://fxjollois.github.io/cours-sql/ ;</li> <li>https://sqlzoo.net/wiki/SQL_Tutorial ;</li> </ul> </li> </ul> <ul> <li>A partir du 1er d\u00e9cembre et jusqu\u2019au 25 d\u00e9cembre, 2 \u00e9nigmes de programmation sont \u00e0 r\u00e9soudre par jour sur adventofcode.com (Voir les conseils de Gilles LASSUS pour Advent Of Code) ;</li> <li>Reprendre en main d'ipycanvas  ;</li> <li>Faire les activit\u00e9s de Fractals_trees_avec_ipycanvas  ;</li> <li>Faire les activit\u00e9s de Let_it_snow  ;</li> <li>Faire les activit\u00e9s de L-Systeme  ;</li> </ul>"},{"location":"#le-0112","title":"Le 01/12","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>Correction tours de Hano\u00ef partie C  ;</li> <li>Finir de compl\u00e9ter la proposition de correction pour l'\u00e9valuation pratique : une tortue r\u00e9cursive  ;</li> </ul> <ul> <li>A partir du 1er d\u00e9cembre et jusqu\u2019au 25 d\u00e9cembre, 2 \u00e9nigmes de programmation sont \u00e0 r\u00e9soudre par jour sur adventofcode.com (Voir les conseils de Gilles LASSUS pour Advent Of Code) ;</li> <li>Reprendre en main d'ipycanvas  ;</li> <li>Faire les activit\u00e9s de Fractals_trees_avec_ipycanvas  ;</li> <li>Faire les activit\u00e9s de Let_it_snow  ;</li> <li>Faire les activit\u00e9s de L-Systeme  ; </li> </ul>"},{"location":"#du-21-au-2911","title":"Du 21 au 29/11","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>Evaluation pratique appliqu\u00e9es aux tours de Hano\u00ef partie B  ;</li> <li>Evaluation pratique appliqu\u00e9es aux tours de Hano\u00ef partie C  ;</li> </ul> <ul> <li>Reprise en main d'ipycanvas  ;</li> <li>Rendre progressivement par mail le travail r\u00e9alis\u00e9 sur les tours de Hano\u00ef...</li> </ul>"},{"location":"#le-1811","title":"Le 18/11","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>Evaluation pratique appliqu\u00e9es aux tours de Hano\u00ef partie A  ;</li> <li>Evaluation pratique : une tortue r\u00e9cursive  ;</li> </ul> <ul> <li>Reprise en main d'ipycanvas  ;</li> <li>Rendre progressivement par mail le travail r\u00e9alis\u00e9 sur les notebook R\u00e9cursif, Pile, File...</li> </ul>"},{"location":"#le-1711","title":"Le 17/11","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>Evaluation sur la programmation r\u00e9cursive, les structures de donn\u00e9e Piles et Files et la programmation en Python plus g\u00e9n\u00e9ralement ;</li> </ul> <ul> <li>Rendre progressivement par mail le travail r\u00e9alis\u00e9 sur les notebook R\u00e9cursif, Pile, File...</li> </ul>"},{"location":"#le-1511","title":"Le 15/11","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>Finir la programmation r\u00e9cursive  ;</li> <li>Analyser la proposition de correction du notebook Liste  ;    </li> <li>Lire la proposition de correction de l'\u00e9valuation de POO et Compl\u00e9ter celle sur les listes chain\u00e9es ;</li> <li>Lire la correction du DM sur les Piles et Files ;</li> <li>Synth\u00e8se programmation r\u00e9cursive et structure lin\u00e9aire Liste, Pile et File ;</li> </ul> <ul> <li>Rendre progressivement par mail le travail r\u00e9alis\u00e9 sur les notebook R\u00e9cursif, Pile, File...</li> <li>Se pr\u00e9parer pour une \u00e9valuation sur la programmation r\u00e9cursive, les structures de donn\u00e9e Piles et Files et la programmation en Python plus g\u00e9n\u00e9ralement pour le 17/11.</li> </ul>"},{"location":"#le-1011","title":"Le 10/11","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>D\u00e9couvrir la programmation r\u00e9cursive  ;</li> </ul> <ul> <li>Rendre progressivement par mail le travail r\u00e9alis\u00e9 sur les notebook R\u00e9cursif, Pile, File...</li> </ul>"},{"location":"#les-20-et-2110-2h-1h","title":"Les 20 et 21/10 (2h + 1h)","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li> <p>Synth\u00e8se de Liste  ;</p> </li> <li> <p>Evaluation sur la POO et les listes chain\u00e9es  le 20/10.</p> </li> <li> <p>Structure Lin\u00e9aire de Donn\u00e9es :</p> <ul> <li>Pile  ;</li> <li>File  ;</li> </ul> </li> </ul> <ul> <li> <p>Rendre progressivement par mail le travail r\u00e9alis\u00e9 sur les notebook Pile, File...</p> </li> <li> <p>Faire sur copie le Devoir Maison DM_Pile_File.pdf pour le 07/11 ;</p> </li> </ul>"},{"location":"#du-11-au-1810","title":"Du 11 au 18/10","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li> <p>Synth\u00e8se de Programmation Orient\u00e9e Objet ;</p> </li> <li> <p>Structure Lin\u00e9aire de Donn\u00e9es :</p> <ul> <li>Liste  ;</li> <li>Pile  ;</li> <li>File  ;</li> </ul> </li> </ul> <ul> <li>Se pr\u00e9parer pour une \u00e9valuation sur la POO, les listes chain\u00e9es et la programmation imp\u00e9rative et proc\u00e9durale en Python plus g\u00e9n\u00e9ralement pour le 20/10.</li> <li>Rendre progressivement par mail le travail r\u00e9alis\u00e9 sur les notebook POO, Liste, Pile, File...</li> </ul>"},{"location":"#le-0610-2h","title":"Le 06/10 (2h)","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li> <p>Propositions de correction pour l'exercice S\u00e9rie de notes en programmation imp\u00e9rative et proc\u00e9durale avec gestion des erreurs -&gt;Faire le travail de modularisation d\u00e9mand\u00e9 ; </p> </li> <li> <p>Finir les activit\u00e9s d'introduction \u00e0 la Programmation Orient\u00e9e Objet et transmettre ce notebook par mail ;\u200b\u200b   </p> </li> <li> <p>Appliquer la POO \u00e0 la programmation de vos projets pour la F\u00eate de la Science ;</p> </li> </ul> <ul> <li>Finir les activit\u00e9s d'introduction \u00e0 la Programmation Orient\u00e9e Objet et transmettre ce notebook par mail ;   </li> </ul>"},{"location":"#le-0410-1h","title":"Le 04/10 (1h)","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li> <p>Info du bac ;</p> </li> <li> <p>Retour sur le travail demand\u00e9 (quid de la modularit\u00e9 ?)  ;    </p> </li> <li> <p>Poursuivre l'introduction \u00e0 la Programmation Orient\u00e9e Objet  ;</p> </li> </ul> <ul> <li> <p>Finir le notebook des recommandations de programmation appliqu\u00e9es \u00e0 l'exercice s\u00e9rie de notes et le rendre par mail pour le 29/09 ;</p> </li> <li> <p>Finir l'introduction \u00e0 la Programmation Orient\u00e9e Objet  ;</p> </li> </ul>"},{"location":"#le-2909-2h","title":"Le 29/09 (2h)","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li> <p>Finir le notebook des recommandations de programmation appliqu\u00e9es \u00e0 l'exercice s\u00e9rie de notes et le rendre par mail pour le 29/09 ;</p> </li> <li> <p>Introduction \u00e0 la Programmation Orient\u00e9e Objet  ;</p> </li> </ul> <ul> <li> <p>Finir le notebook des recommandations de programmation appliqu\u00e9es \u00e0 l'exercice s\u00e9rie de notes et le rendre par mail pour le 29/09 ;</p> </li> <li> <p>Poursuivre l'introduction \u00e0 la Programmation Orient\u00e9e Objet ;</p> </li> </ul>"},{"location":"#le-2709-1h","title":"Le 27/09 (1h)","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li> <p>Retour sur le travail demand\u00e9 ;</p> </li> <li> <p>Recommandations de programmation appliqu\u00e9es \u00e0 l'exercice s\u00e9rie de notes  -&gt; exp\u00e9rimenter les solutions du notebook en compl\u00e9tant le code et la documentation des fonctions partiellement donn\u00e9es</p> </li> </ul> <ul> <li>Finir le notebook des recommandations de programmation appliqu\u00e9es \u00e0 l'exercice s\u00e9rie de notes et le rendre par mail pour le 29/09 ;</li> </ul>"},{"location":"#le-2209-2h","title":"Le 22/09 : (2h)","text":"CONTENU DE S\u00c9ANCETRAVAIL \u00c0 FAIRE <ul> <li>Notion de paradigme de programmation  -&gt; regarder rapidement le d\u00e9but de la vid\u00e9o et faire les activit\u00e9s de r\u00e9visions associ\u00e9es</li> </ul> <ul> <li>Finir les activit\u00e9s de r\u00e9visions associ\u00e9es \u00e0 la Notion de paradigme de programmation imp\u00e9rative structur\u00e9e et proc\u00e9durale en Python et les remettre par mail pour le 27/09 ;</li> </ul>"},{"location":"#les-13-15-et-2009-1h-2h-1h","title":"Les 13, 15 et 20/09 : (1h + 2h + 1h)","text":"<ul> <li>Finir le notebook synth\u00e8se de r\u00e9visions de programmation en Python avec l'application en ligne futurcoder et le transmettre par mail pour support d'une restitution orale -&gt; Se pr\u00e9parer pour accompagner un groupe d'\u00e9l\u00e8ves de Secondes avec cet outil le mardi 20/09 de 10h \u00e0 12h ; </li> </ul>"},{"location":"#les-06-et-0809-1h-2h","title":"Les 06 et 08/09 : (1h + 2h)","text":"<ul> <li> <p>Red\u00e9couvrir les bases de la programmation en Python avec l'application en ligne futurcoder -&gt; Se pr\u00e9parer pour accompagner un groupe d'\u00e9l\u00e8ves de Secondes avec cet outil... ;</p> </li> <li> <p>Organiser un classeur num\u00e9rique pour la NSI sur GitHub -&gt; R\u00e9diger progressivement un notebook jupyter r\u00e9sumant vos apprentissages algorithmiques et leur programmation en Python3... ;</p> </li> </ul>"},{"location":"bac/","title":"Bac","text":""},{"location":"bac/#baccalaureat-general-2023","title":"Baccalaur\u00e9at G\u00e9n\u00e9ral 2023","text":""},{"location":"bac/#enseignement-de-specialite-numerique-et-sciences-informatiques","title":"Enseignement de sp\u00e9cialit\u00e9 num\u00e9rique et sciences informatiques","text":""},{"location":"bac/#nouvelles-modalites-de-passation","title":"Nouvelles modalit\u00e9s de passation","text":"<p>Extrait de la Note de service MENE2226770N du 29-9-2022 </p> <p>\u00ab 1. Partie \u00e9crite \u00bb</p> <p>\u00ab Le sujet comporte trois exercices ind\u00e9pendants les uns des autres, qui permettent d'\u00e9valuer les connaissances et comp\u00e9tences des candidats. \u00bb.</p>"},{"location":"bac/#programme-resserre-dexamen-des-epreuves-terminales-des-enseignements-de-specialite-de-la-voie-generale-a-compter-de-la-session-2023","title":"Programme resserr\u00e9 d'examen des \u00e9preuves terminales des enseignements de sp\u00e9cialit\u00e9 de la voie g\u00e9n\u00e9rale - \u00e0 compter de la session 2023","text":"<p>Extrait de la Note de service MENE2227884N du 29-9-2022 La pr\u00e9sente note de service d\u00e9finit, enseignement de sp\u00e9cialit\u00e9 par enseignement de sp\u00e9cialit\u00e9, les parties du programme sur lesquelles les candidats peuvent \u00eatre interrog\u00e9s lors des \u00e9preuves terminales de sp\u00e9cialit\u00e9. Elle synth\u00e9tise les dispositions publi\u00e9es au Bulletin officiel sp\u00e9cial n\u00b0 2 du 11 f\u00e9vrier 2020, au Bulletin officiel n\u00b0 30 du 29 juillet 2021 et au Bulletin officiel n\u00b0 15 du 14 avril 2022, qu'elle compl\u00e8te par de nouvelles dispositions. Elle est applicable \u00e0 compter de la session 2023 du baccalaur\u00e9at. Le resserrement des parties des programmes des enseignements de sp\u00e9cialit\u00e9 pouvant \u00eatre \u00e9valu\u00e9es lors des \u00e9preuves terminales, pr\u00e9sent\u00e9 dans cette note de service, vise \u00e0 tenir compte du calendrier scolaire et de la temporalit\u00e9 des proc\u00e9dures li\u00e9es \u00e0 l'entr\u00e9e dans l'enseignement sup\u00e9rieur.</p> <p>Lors de l'\u00e9preuve terminale dans l'enseignement de sp\u00e9cialit\u00e9 num\u00e9rique et sciences informatiques, les candidats peuvent \u00eatre \u00e9valu\u00e9s sur les parties suivantes du programme de la classe de terminale :</p>"},{"location":"bac/#rubrique-structures-de-donnees-uniquement-les-items-suivants","title":"Rubrique \u00ab Structures de donn\u00e9es \u00bb, uniquement les items suivants :","text":"<ul> <li> Structures de donn\u00e9es, interface et impl\u00e9mentation</li> <li> Vocabulaire de la programmation objet : classes, attributs, m\u00e9thodes, objets</li> <li> Listes, piles, files : structures lin\u00e9aires. Dictionnaires, index et cl\u00e9</li> <li> Arbres : structures hi\u00e9rarchiques. Arbres binaires : n\u0153uds, racines, feuilles, sous-arbres gauches, sous-arbres droits</li> </ul>"},{"location":"bac/#rubrique-bases-de-donnees-uniquement-les-items-suivants","title":"Rubrique \u00ab Bases de donn\u00e9es \u00bb, uniquement les items suivants :","text":"<ul> <li> Mod\u00e8le relationnel : relation, attribut, domaine, clef primaire, clef \u00e9trang\u00e8re, sch\u00e9ma relationnel</li> <li> Base de donn\u00e9es relationnelle</li> <li> Langage SQL : requ\u00eates d'interrogation et de mise \u00e0 jour d'une base de donn\u00e9es</li> </ul>"},{"location":"bac/#rubrique-architectures-materielles-systemes-dexploitation-et-reseaux-uniquement-les-items-suivants","title":"Rubrique \u00ab Architectures mat\u00e9rielles, syst\u00e8mes d'exploitation et r\u00e9seaux \u00bb, uniquement les items suivants :","text":"<ul> <li> Gestion des processus et des ressources par un syst\u00e8me d'exploitation</li> <li> Protocoles de routage</li> </ul>"},{"location":"bac/#rubrique-langages-et-programmation-uniquement-les-items-suivants","title":"Rubrique \u00ab Langages et programmation \u00bb, uniquement les items suivants :","text":"<ul> <li> R\u00e9cursivit\u00e9</li> <li> Modularit\u00e9</li> <li> Mise au point des programmes. Gestion des bugs</li> </ul>"},{"location":"bac/#rubrique-algorithmique-uniquement-les-items-suivants","title":"Rubrique \u00ab Algorithmique \u00bb, uniquement les items suivants :","text":"<ul> <li> Algorithmes sur les arbres binaires et sur les arbres binaires de recherche</li> <li> M\u00e9thode \u00ab diviser pour r\u00e9gner \u00bb</li> </ul>"},{"location":"github/","title":"Mon classeur de NSI sur GitHub","text":""},{"location":"github/#creer-un-depot-github","title":"Cr\u00e9er un d\u00e9pot GitHub","text":"<p>Cr\u00e9er un compte sur GitHub (Sign up) depuis un navigateur \u00e0 l'adresse https://github.com/ :</p> <p>Ou identifier vous (Sign in) si vous avez d\u00e9j\u00e0 un compte :</p> <p>A l'adresse https://github.com/new cr\u00e9er un nouveau r\u00e9pertoire de d\u00e9pot nomm\u00e9, par exemple <code>mon_classeur</code> :</p> <p>Cocher la case \"Initialize this repository with a README\" puis cliquer sur le bouton \"Create repository\".</p> <p>Voil\u00e0, vous faites maintenant parti d'un autre r\u00e9seau social mondial celui des d\u00e9veloppeurs de code...</p>"},{"location":"github/#modifier-le-fichier-readmemd","title":"Modifier le fichier <code>README.md</code>","text":"<p>Le fichier <code>README</code> a pour extension <code>.md</code> pour MarkDown, c'est ce langage de description rudimentaire que nous utiliserons principalement pour r\u00e9diger nos pages web sur GitHub.</p> <p>Il existe plusieurs versions de ce langage qui, \u00e0 partir d'une syntaxe de base commune, poss\u00e8dent d'autres \u00e9l\u00e9ments additionnels sp\u00e9cifiques...</p> <p>Cliquer sur le crayon pour ouvrir le fichier <code>README.md</code>dans l'\u00e9diteur en ligne :</p> <p>Modifier son contenu en utilisant la syntaxe MarkDown \u00e0 la sauce GitHub :</p> <p>L'onglet <code>Preview</code> permet de visualiser le r\u00e9sultat avant sa publication...</p> Code exemple \u00e0 copier/coller <pre><code>## Voici un titre de niveau 2\n### Et voici un titre de niveau 3\nCeci est un paragraphe.\nCette ligne s'affiche dans le m\u00eame paragraphe \u00e0 la suite de la premi\u00e8re phrase sans retour \u00e0 la ligne.  \nCette ligne s'affiche dans le m\u00eame paragraphe avec un retour \u00e0 la ligne\ncar on a laiss\u00e9 deux caract\u00e8res espaces apr\u00e8s le point de la phrase pr\u00e9c\u00e9dente.\n\nCette ligne s'affiche dans un nouveau paragraphe\ncar on a laiss\u00e9 deux sauts de ligne apr\u00e8s le point de la phrase pr\u00e9c\u00e9dente.\n\nOn peut obtenir du _texte_ avec *simple emphase* rendu en *italique*,\ndu __texte__ avec **forte emphase** rendu en **Gras**,\ndu **_Texte_** \u00e0 la fois en **gras** et en *italique*,\ndu `code source` rendu en caract\u00e8res `monospaces`,\n    du ~~texte barr\u00e9~~  rendu avec une ligne en travers du texte.\n\n## Un lien :\nCe document est r\u00e9dig\u00e9 en [MarkDown](https://fr.wikipedia.org/wiki/Markdown).\n\n## Une image :\n![illustration GitHub Docs](https://ericecmorlaix.github.io/img/GitHub00c.png)\n\n## Une liste :\n- Toto ;\n- Titi ;\n- Tata...\n\n## Un avertissement :\n&gt; Libre \u00e0 vous de personaliser cette page \u00e0 l'aide de la documentation\n&gt;  du [MarkDown \u00e0 la sauce GitHub](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax)...\n</code></pre> <p>Publier la nouvelle version du fichier <code>README.md</code> en d\u00e9crivant vos modifications dans un message et puis en cliquant sur le bouton <code>Commit changes</code> :</p> <p>Waouh ! vous venez de faire votre premier Commit !</p>"},{"location":"github/#creer-de-nouveaux-dossier-et-fichier","title":"Cr\u00e9er de nouveaux dossier et fichier","text":"<p>Cliquer sur le bouton <code>Add file</code> depuis l'interface de votre d\u00e9pot GitHub et choisir <code>Create new files</code> :</p> <p>Dans l'\u00e9diteur qui s'ouvre, saisir le nom du fichier avec son extension et son chemin dans l'arborescence, par exemple <code>docs/index.md</code> :</p>          Comment \u00e9diter une arborescence de dossiers sur GitHub ?              <p>Faire un nouveau Commit avec le message : <code>ajout fichier index.md dans dossier docs</code></p>"},{"location":"github/#televerser-des-dossiers-et-fichiers","title":"T\u00e9l\u00e9verser des dossiers et fichiers","text":"<p>Depuis le dossier <code>docs</code>, Cliquer sur le bouton <code>Add file</code> depuis l'interface de votre d\u00e9pot GitHub et choisir <code>Upload files</code> :</p> <p>Partager votre \u00e9cran pour Glisser/D\u00e9poser vos dossiers et/ou vos fichiers</p> Exemple \u00e0 faire vous m\u00eame : <ul> <li>glisser/d\u00e9poser un fichier image dans le dossier <code>docs</code> ;</li> <li>Committer ;</li> <li>Editer le fichier <code>index.md</code> en y ajoutant l'instruction MarkDown <code>![image de ...?](nom_du_fichier_image.png)</code> ;</li> <li>Pr\u00e9visualiser pour v\u00e9rifier le bon affichage de l'image ;</li> <li>Committer ;</li> </ul>"},{"location":"github/#utiliser-vsc-en-ligne-pour-gerer-votre-depot-github","title":"Utiliser VSC en ligne pour g\u00e9rer votre d\u00e9pot GitHub","text":""},{"location":"github/#preparation","title":"Pr\u00e9paration","text":"<p>Pour faire fonctionner l'IDE Visual Studio Code dans un navigateur et ainsi d\u00e9velopper et maintenir des d\u00e9p\u00f4ts GitHub depuis n\u2019importe quelle machine sans installation locale on peut utiliser https://www.gitpod.io/ :</p> <ul> <li>Signer avec votre compte GitHub ;</li> <li>Choisir VS Code BROWSER ;</li> <li>Cliquer sur <code>New Workspace</code> ;</li> <li>Rechercher puis choisir votre d\u00e9pot dans la liste...</li> </ul> <p>Tous les dossiers et fichiers de votre d\u00e9pot sont alors \u00e9ditables dans l'environnement de d\u00e9veloppement int\u00e9gr\u00e9 Visual Studio Code en ligne.</p>"},{"location":"github/#la-routine-pour-maintenir-votre-site-git-avec-un-editeur-vsc-en-ligne-se-resume-a","title":"La routine pour maintenir votre site Git avec un \u00e9diteur VSC en ligne se r\u00e9sume \u00e0 :","text":"I - Modifier vos fichiers sur la machine virtuelle GitPod : <p>Depuis l'Explorateur (<code>Explorer</code> Ctrl\uff0bMaj\uff0bE) de VSC (bleu) :</p> <ul> <li>cliquer sur un dossier pour afficher la liste de son contenu ;</li> <li>cliquer sur les ic\u00f4nes (jaunes) pour cr\u00e9er un nouveau fichier et/ou un nouveau dossier ;</li> <li>maintenir le clic sur un fichier (ou un dossier) pour le d\u00e9placer dans l'arborescence ;</li> <li>cliquer sur un fichier pour l'ouvrir dans l'\u00e9diteur afin de le modifier ;</li> <li>cliquer droit sur un fichier <code>.md</code> et choisir <code>Open preview</code> pour le pr\u00e9visualiser ;</li> </ul> II - Indexer vos changements : <p>Depuis le \"Contr\u00f4le de code source\" (vert) (<code>Source Control</code> Ctrl\uff0bMaj\uff0bG),  dans \"Changements\" (<code>Changes</code>) cliquer sur le <code>+</code> (orange) pour ajouter les fichiers modifi\u00e9s   \u00e0 mettre en attente (indexer) dans cette phase (stage) de d\u00e9veloppement ;</p> III - Committer, valider vos modifications : <p>Ajouter un message sous \"CONTR\u00d4LE DE CODE SOURCE\" (<code>SOURCE CONTROL</code>) (rose)  pour d\u00e9finir ces modifications \u00e0 ce stade de votre d\u00e9veloppement,   puis cliquer sur <code>\u2713</code> (violet) pour valider ce commit ;</p> IV - Pousser les modifications vers votre d\u00e9p\u00f4t distant : <p>Cliquer sur les <code>...</code> en face de <code>CONTR\u00d4LE DE CODE SOURCE</code> et choisir <code>Push</code> ;</p> Exemple \u00e0 faire vous m\u00eame : <ul> <li>cliquer sur l'icone <code>New Folder</code> (jaune) pour cr\u00e9er un nouveau dossier nomm\u00e9 <code>images</code> ;</li> <li>d\u00e9placer votre fichier image dans le dossier <code>images</code> ;</li> <li>cliquer sur le fichier <code>index.md</code> pour l'ouvrir dans l'\u00e9diteur ;</li> <li>cliquer  droit le fichier <code>index.md</code>et choisir <code>Open preview</code> pour le pr\u00e9visualiser ;</li> <li>glisser l'onglet de la fen\u00eatre de pr\u00e9visualisation sur le cot\u00e9 droit ;</li> <li>modifier le chemin relatif vers l'image dans l'instruction MarkDown <code>![image de ...?](images/nom_du_fichier_image.png)</code> ; </li> <li>pr\u00e9visualiser pour v\u00e9rifier le bon affichage de l'image ;</li> <li>indexer, Commiter puis Pousser vos modifications ;</li> <li>v\u00e9rifier la mis \u00e0 jour de votre d\u00e9p\u00f4t ;</li> </ul>"},{"location":"juges_en_ligne/","title":"Juges en lignes","text":"<p>Quelques sites du web pour s'entrainer \u00e0 la programmation en Python et se challenger en autonomie...</p> <ul> <li> <p>S'initier avec futurcoder</p> </li> <li> <p>Des cours et des probl\u00e8mes sur FranceIOI</p> </li> <li> <p>Des exercices pratiques de NSI</p> </li> </ul>"},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/","title":"Corrections Evaluation POO DM Liste","text":""},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#nom-prenom","title":"Nom Pr\u00e9nom :","text":""},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#programmation-orientee-objet","title":"Programmation Orient\u00e9e Objet :","text":""},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#exercice-1","title":"Exercice 1","text":"<p>On consid\u00e8re l'extrait de code ci-dessous : <pre><code>bart = Simpson(\"fils\", 12)\nhomer = Simpson(\"p\u00e8re\", 41)\nhomer.ronfle()\n</code></pre> Compl\u00e9ter les phrases ci-dessous  :</p> <ol> <li><code>bart</code> est une instance de la classe <code>Simpson</code>.</li> <li>C'est donc un objet de type Simpson. \u00c0 la construction, l'objet <code>homer</code> poss\u00e8de (au moins) deux attributs qui valent <code>\"p\u00e8re\"</code> et <code>41</code>. Il poss\u00e8de aussi (au moins) une m\u00e9thode appel\u00e9e ronfle().</li> </ol>"},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#exercice-2","title":"Exercice 2","text":"<p>On s'int\u00e9resse aux joueurs du Top14 de rugby.</p> <ol> <li> <p>Construire une classe <code>Joueur</code> o\u00f9 chaque instance contiendra les attributs <code>nom</code>, <code>club</code> et <code>age</code>. <pre><code>class Joueur :\n    def __init__(self, nom, club, age):\n        self.nom = nom\n        self.club = club\n        self.age = age\n</code></pre></p> </li> <li> <p>Instancier le joueur Nans_DUCUING, joueur de 27 ans \u00e9voluant \u00e0 l'UBB. <pre><code>nans_ducuing = Joueur(\"Nans DUCUING\", \"UBB\", 27)\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction prenant en param\u00e8tres deux joueurs de la classe <code>Joueur</code> et renvoyant le nom du joueur le plus \u00e2g\u00e9, ou celui des deux joueurs dans le cas d'une \u00e9galit\u00e9 d'\u00e2ge. <pre><code>def compare(joueur1, joueur2) :\n    if joueur1.age &gt; joueur2.age :\n        return joueur1.nom\n    elif joueur2.age &gt; joueur1.age :\n        return joueur2.nom\n    else :\n        return joueur1.nom,joueur2.nom\n</code></pre></p> </li> </ol>"},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#listes-chainees","title":"Listes chain\u00e9es :","text":"<p>On consid\u00e8re des listes cha\u00een\u00e9es, avec la liste vide not\u00e9e <code>nil</code> et les fonctions suivantes :</p> Fonction Description <code>tete(liste)</code> Renvoie la valeur du premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>queue(liste)</code> Renvoie la liste sur laquelle pointe le premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>cons(valeur, liste)</code> Renvoie une nouvelle liste correspondant \u00e0 l\u2019ajout de <code>valeur</code> en d\u00e9but de <code>liste</code>. <code>est_vide(liste)</code> Renvoie un bool\u00e9en indiquant si <code>liste</code> est vide ou non. <p>Le sch\u00e9ma suivant correspond \u00e0 la repr\u00e9sentation en m\u00e9moire des listes cha\u00een\u00e9es <code>l1</code>, <code>l2</code>, <code>l3</code> et <code>l4</code>.</p> <p></p>"},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#exercice-1_1","title":"Exercice 1 :","text":"<p>Pour chacune des commandes suivantes, indiquer la r\u00e9ponse obtenue.</p> <ol> <li><code>tete(l2)</code> :  1</li> <li><code>queue(l1)</code>:  [1, 7]</li> <li><code>est_vide(queue(l1))</code>:  False</li> <li><code>tete(queue(queue(queue(l4))))</code>:  6</li> <li><code>est_vide(queue(queue(l2)))</code>:  True</li> </ol>"},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#exercice-2_1","title":"Exercice 2 :","text":"<p>L'instruction <code>l1 = cons(6, cons(1, cons(7, nil)))</code> d\u00e9finit la liste <code>l1</code>. Donner les d\u00e9finitions des listes <code>l2</code>, <code>l3</code> et <code>l4</code> \u00e0 l\u2019aide des fonctions <code>cons</code> et <code>queue</code> et en r\u00e9utilisant les listes d\u00e9j\u00e0 d\u00e9finies pour d\u00e9finir les suivantes :</p> <ol> <li><code>l2</code> = queue(l1)</li> <li><code>l3</code> = cons(3, cons(5, l1))</li> <li><code>l4</code> = cons(8, l3)</li> </ol>"},{"location":"SD/Corrections-Evaluation_POO-DM_Liste/#exercice-3","title":"Exercice 3 :","text":"<p>En utilisant les fonctions donn\u00e9es ci-dessus,  proposer une version it\u00e9rative et une version r\u00e9cursive pour la fonction <code>longueur(liste)</code> qui renvoie la longueur de la liste cha\u00een\u00e9e <code>liste</code> telle que : <pre><code>&gt;&gt;&gt; longueur(nil)\n0\n&gt;&gt;&gt; longueur(cons(7, cons(0, cons(12, nil))))\n3\n</code></pre> <pre><code>def longueur(liste) : # version it\u00e9rative\n</code></pre> <pre><code>def longueur(liste) : # version r\u00e9cursive\n</code></pre></p>"},{"location":"SD/Eval_POO_Liste/","title":"Eval POO Liste","text":""},{"location":"SD/Eval_POO_Liste/#nom-prenom","title":"Nom Pr\u00e9nom :","text":""},{"location":"SD/Eval_POO_Liste/#programmation-orientee-objet","title":"Programmation Orient\u00e9e Objet :","text":""},{"location":"SD/Eval_POO_Liste/#exercice-1","title":"Exercice 1","text":"<p>On consid\u00e8re l'extrait de code ci-dessous : <pre><code>bart = Simpson(\"fils\", 12)\nhomer = Simpson(\"p\u00e8re\", 41)\nhomer.ronfle()\n</code></pre> Compl\u00e9ter les phrases ci-dessous  :</p> <ol> <li><code>bart</code> est une ............................ de la ............................  <code>Simpson</code>.</li> <li>C'est donc un ........................... de type ........................... </li> <li>\u00c0 la construction, l'........................... <code>homer</code> poss\u00e8de (au moins) deux ........................... qui valent <code>\"p\u00e8re\"</code> et <code>41</code>. Il poss\u00e8de aussi (au moins) une ........................... appel\u00e9e ........................... .</li> </ol> <p></p>"},{"location":"SD/Eval_POO_Liste/#exercice-2","title":"Exercice 2","text":"<p>On s'int\u00e9resse aux joueurs du Top14 de rugby.</p> <ol> <li> <p>Construire une classe <code>Joueur</code> o\u00f9 chaque instance contiendra les attributs <code>nom</code>, <code>club</code> et <code>age</code>. <pre><code>class Joueur :\n</code></pre></p> </li> <li> <p>Instancier le joueur Nans_DUCUING, joueur de 27 ans \u00e9voluant \u00e0 l'UBB. <pre><code>\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction prenant en param\u00e8tres deux joueurs de la classe <code>Joueur</code> et renvoyant le nom du joueur le plus \u00e2g\u00e9, ou celui des deux joueurs dans le cas d'une \u00e9galit\u00e9 d'\u00e2ge. <pre><code>def compare(joueur1, joueur2) :\n</code></pre></p> </li> </ol>"},{"location":"SD/Eval_POO_Liste/#listes-chainees","title":"Listes chain\u00e9es :","text":"<p>On consid\u00e8re des listes cha\u00een\u00e9es, avec la liste vide not\u00e9e <code>nil</code> et les fonctions suivantes :</p> Fonction Description <code>tete(liste)</code> Renvoie la valeur du premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>queue(liste)</code> Renvoie la liste sur laquelle pointe le premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>cons(valeur, liste)</code> Renvoie une nouvelle liste correspondant \u00e0 l\u2019ajout de <code>valeur</code> en d\u00e9but de <code>liste</code>. <code>est_vide(liste)</code> Renvoie un bool\u00e9en indiquant si <code>liste</code> est vide ou non. <p>Le sch\u00e9ma suivant correspond \u00e0 la repr\u00e9sentation en m\u00e9moire des listes cha\u00een\u00e9es <code>l1</code>, <code>l2</code>, <code>l3</code> et <code>l4</code>.</p> <p></p>"},{"location":"SD/Eval_POO_Liste/#exercice-1_1","title":"Exercice 1 :","text":"<p>Pour chacune des commandes suivantes, indiquer la r\u00e9ponse obtenue.</p> <ol> <li><code>tete(l2)</code> :  ...........................</li> <li><code>queue(l1)</code>:  ...........................</li> <li><code>est_vide(queue(l1))</code>:  ...........................</li> <li><code>tete(queue(queue(queue(l4))))</code>:  ...........................</li> <li><code>est_vide(queue(queue(l2)))</code>:  ...........................</li> </ol> <p></p>"},{"location":"SD/Eval_POO_Liste/#exercice-2_1","title":"Exercice 2 :","text":"<p>L'instruction <code>l1 = cons(6, cons(1, cons(7, nil)))</code> d\u00e9finit la liste <code>l1</code>. Donner les d\u00e9finitions des listes <code>l2</code>, <code>l3</code> et <code>l4</code> \u00e0 l\u2019aide des fonctions <code>cons</code> et <code>queue</code> et en r\u00e9utilisant les listes d\u00e9j\u00e0 d\u00e9finies pour d\u00e9finir les suivantes : 1. <code>l2</code> = ............................................................................................................... 2. <code>l3</code> = ............................................................................................................... 3. <code>l4</code> = ...............................................................................................................</p>"},{"location":"SD/Eval_POO_Liste/#exercice-3","title":"Exercice 3 :","text":"<p>En utilisant les fonctions donn\u00e9es ci-dessus,  proposer une version it\u00e9rative et une version r\u00e9cursive pour la fonction <code>longueur(liste)</code> qui renvoie la longueur de la liste cha\u00een\u00e9e <code>liste</code> telle que : <pre><code>&gt;&gt;&gt; longueur(nil)\n0\n&gt;&gt;&gt; longueur(cons(7, cons(0, cons(12, nil))))\n3\n</code></pre> <pre><code>def longueur(liste) : # version it\u00e9rative\n</code></pre></p>"},{"location":"SD/Evaluation_1-Correction/","title":"Evaluation 1 Correction","text":""},{"location":"SD/Evaluation_1-Correction/#nom-prenom","title":"Nom Pr\u00e9nom :","text":""},{"location":"SD/Evaluation_1-Correction/#programmation-orientee-objet","title":"Programmation Orient\u00e9e Objet :","text":""},{"location":"SD/Evaluation_1-Correction/#exercice-1","title":"Exercice 1","text":"<p>On consid\u00e8re l'extrait de code ci-dessous : <pre><code>bart = Simpson(\"fils\", 12)\nhomer = Simpson(\"p\u00e8re\", 41)\nhomer.ronfle()\n</code></pre> Compl\u00e9ter les phrases ci-dessous  :</p> <ol> <li><code>bart</code> est une instance de la classe <code>Simpson</code>.</li> <li>C'est donc un objet de type Simpson. \u00c0 la construction, l'objet <code>homer</code> poss\u00e8de (au moins) deux attributs qui valent <code>\"p\u00e8re\"</code> et <code>41</code>. Il poss\u00e8de aussi (au moins) une m\u00e9thode appel\u00e9e ronfle().</li> </ol>"},{"location":"SD/Evaluation_1-Correction/#exercice-2","title":"Exercice 2","text":"<p>On s'int\u00e9resse aux joueurs du Top14 de rugby.</p> <ol> <li> <p>Construire une classe <code>Joueur</code> o\u00f9 chaque instance contiendra les attributs <code>nom</code>, <code>club</code> et <code>age</code>. <pre><code>class Joueur :\n    def __init__(self, nom, club, age):\n        self.nom = nom\n        self.club = club\n        self.age = age\n</code></pre></p> </li> <li> <p>Instancier le joueur Nans_DUCUING, joueur de 27 ans \u00e9voluant \u00e0 l'UBB. <pre><code>nducuing = Joueur(\"Nans DUCUING\", \"UBB\", 27)\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction prenant en param\u00e8tres deux joueurs de la classe <code>Joueur</code> et renvoyant le nom du joueur le plus \u00e2g\u00e9, ou celui des deux joueurs dans le cas d'une \u00e9galit\u00e9 d'\u00e2ge. <pre><code>def compare(joueur1, joueur2) :\n    if joueur1.age &gt; joueur2.age :\n        return joueur1.nom\n    elif joueur2.age &gt; joueur1.age :\n        return joueur2.nom\n    else :\n        return joueur1.nom,joueur2.nom\n</code></pre></p> </li> </ol>"},{"location":"SD/Evaluation_1-Correction/#programmation-recursive","title":"Programmation r\u00e9cursive :","text":""},{"location":"SD/Evaluation_1-Correction/#exercice-1_1","title":"Exercice 1 :","text":"<p>On consid\u00e8re la fonction<code>mystere(n)</code> d\u00e9finit par le code : <pre><code>def mystere(n):\n    if n == 0:\n        return 1\n    else:\n        return n * mystere(n-1)\n</code></pre> 1. Quel est le r\u00e9sultat renvoy\u00e9 par <code>mystere(4)</code> ?  24     &gt; <code>mystere(4)</code> = 4 \u00d7 <code>mystere(3)</code>     &gt; = 4 \u00d7 3 \u00d7 <code>mystere(2)</code>     &gt; = 4 \u00d7 3 \u00d7 2 \u00d7<code>mystere(1)</code>     &gt; = 4 \u00d7 3 \u00d7 2 \u00d7 1 \u00d7 <code>mystere(0)</code>     &gt; = 4 \u00d7 3 \u00d7 2 \u00d7 1 \u00d7 1     &gt; = 24</p> <ol> <li> <p>D\u00e9crire, en fran\u00e7ais, ce que fait cette fonction :     &gt; Cette fonction calcule le produit de tous les entiers de 1 \u00e0 n, c\u2019est \u00e0 dire la factorielle de n.</p> </li> <li> <p>Proposer une version it\u00e9rative document\u00e9e pour cette fonction : <pre><code>def mystere(n : int) -&gt;  int :\n'''\n    Calcule le produit de tous les entiers de 1 \u00e0 n,\n    c\u2019est \u00e0 dire la factorielle de n.\n    Pr\u00e9condition :\n        n (int) : entier naturel\n    Postcondition :\n        n! (int)\n    Exemple :\n    &gt;&gt;&gt; mystere(4)\n    24\n    '''\n    factorielle = 1\n    for i in range(n) :\n        factorielle = factorielle * (i + 1)\n        print(factorielle)\n    return factorielle\n</code></pre></p> </li> </ol>"},{"location":"SD/Evaluation_1-Correction/#exercice-2_1","title":"Exercice 2 :","text":"<p>On consid\u00e8re la fonction<code>sigma(n)</code> d\u00e9finit par le code : <pre><code>def sigma(n):\n    resultat = 0\n    for i in range(n+1) :\n        resultat = resultat + i\n    return resultat\n</code></pre></p> <ol> <li>Quel est le r\u00e9sultat renvoy\u00e9 par <code>sigma(0)</code> ? </li> </ol> <p>0</p> <ol> <li>Quel est le r\u00e9sultat renvoy\u00e9 par <code>sigma(4)</code> ? </li> </ol> <p>10</p> <ol> <li> <p>D\u00e9crire, en fran\u00e7ais, ce que fait cette fonction :</p> <p>Cette fonction calcule la somme de tous les entiers de 1 \u00e0 n</p> </li> <li> <p>Proposer une version r\u00e9cursive document\u00e9e pour cette fonction : <pre><code>def sigma(n : int) -&gt; int:\n'''\n    Calcule la somme de tous les entiers de 1 \u00e0 n.\n    Pr\u00e9condition :\n        n (int) : entier naturel\n    Postcondition :\n        somme de 1 \u00e0 n (int)\n    Exemple :\n    &gt;&gt;&gt; sigma(4)\n    10\n    '''\n    if n==0 :\n        return 0\n    else :\n        return n + sigma(n-1)\n</code></pre></p> </li> </ol>"},{"location":"SD/Evaluation_1-Correction/#listes-chainees","title":"Listes chain\u00e9es :","text":"<p>On consid\u00e8re des listes cha\u00een\u00e9es, avec la liste vide not\u00e9e <code>nil</code> et les fonctions suivantes :</p> Fonction Description <code>tete(liste)</code> Renvoie la valeur du premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>queue(liste)</code> Renvoie la liste sur laquelle pointe le premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>cons(valeur, liste)</code> Renvoie une nouvelle liste correspondant \u00e0 l\u2019ajout de <code>valeur</code> en d\u00e9but de <code>liste</code>. <code>est_vide(liste)</code> Renvoie un bool\u00e9en indiquant si <code>liste</code> est vide ou non. <p>Le sch\u00e9ma suivant correspond \u00e0 la repr\u00e9sentation en m\u00e9moire des listes cha\u00een\u00e9es <code>l1</code>, <code>l2</code>, <code>l3</code> et <code>l4</code>.</p> <p></p>"},{"location":"SD/Evaluation_1-Correction/#exercice-1_2","title":"Exercice 1 :","text":"<p>Pour chacune des commandes suivantes, indiquer la r\u00e9ponse obtenue.</p> <ol> <li><code>tete(l2)</code> :  1</li> <li><code>queue(l1)</code>:  [1, 7]</li> <li><code>est_vide(queue(l1))</code>:  False</li> <li><code>tete(queue(queue(queue(l4))))</code>:  6</li> <li><code>est_vide(queue(queue(l2)))</code>:  True</li> </ol>"},{"location":"SD/Evaluation_1-Correction/#exercice-2_2","title":"Exercice 2 :","text":"<p>L'instruction <code>l1 = cons(6, cons(1, cons(7, nil)))</code> d\u00e9finit la liste <code>l1</code>. Donner les d\u00e9finitions des listes <code>l2</code>, <code>l3</code> et <code>l4</code> \u00e0 l\u2019aide des fonctions <code>cons</code> et <code>queue</code> et en r\u00e9utilisant les listes d\u00e9j\u00e0 d\u00e9finies pour d\u00e9finir les suivantes : 1. <code>l2</code> = queue(l1) 2. <code>l3</code> = cons(3, cons(5, l1)) 3. <code>l4</code> = cons(8, l3)</p>"},{"location":"SD/Evaluation_1-Correction/#exercice-3","title":"Exercice 3 :","text":"<p>En utilisant les fonctions donn\u00e9es ci-dessus,  proposer une version it\u00e9rative et une version r\u00e9cursive pour la fonction <code>longueur(liste)</code> qui renvoie la longueur de la liste cha\u00een\u00e9e <code>liste</code> telle que : <pre><code>&gt;&gt;&gt; longueur(nil)\n0\n&gt;&gt;&gt; longueur(cons(7, cons(0, cons(12, nil))))\n3\n</code></pre> <pre><code>def longueur(liste) : # version it\u00e9rative\n</code></pre> <pre><code>def longueur(liste) : # version r\u00e9cursive\n    if est_vide(liste):\n        return 0\n    else:\n        return 1 + longueur(queue(liste))\n</code></pre></p>"},{"location":"SD/Evaluation_1/","title":"Evaluation 1","text":""},{"location":"SD/Evaluation_1/#nom-prenom","title":"Nom Pr\u00e9nom :","text":""},{"location":"SD/Evaluation_1/#programmation-orientee-objet","title":"Programmation Orient\u00e9e Objet :","text":""},{"location":"SD/Evaluation_1/#exercice-1","title":"Exercice 1","text":"<p>On consid\u00e8re l'extrait de code ci-dessous : <pre><code>bart = Simpson(\"fils\", 12)\nhomer = Simpson(\"p\u00e8re\", 41)\nhomer.ronfle()\n</code></pre> Compl\u00e9ter les phrases ci-dessous  :</p> <ol> <li><code>bart</code> est une ............................ de la ............................  <code>Simpson</code>.</li> <li>C'est donc un ........................... de type ........................... </li> <li>\u00c0 la construction, l'........................... <code>homer</code> poss\u00e8de (au moins) deux ........................... qui valent <code>\"p\u00e8re\"</code> et <code>41</code>. Il poss\u00e8de aussi (au moins) une ........................... appel\u00e9e ........................... .</li> </ol>"},{"location":"SD/Evaluation_1/#exercice-2","title":"Exercice 2","text":"<p>On s'int\u00e9resse aux joueurs du Top14 de rugby.</p> <ol> <li> <p>Construire une classe <code>Joueur</code> o\u00f9 chaque instance contiendra les attributs <code>nom</code>, <code>club</code> et <code>age</code>. <pre><code>class Joueur :\n</code></pre></p> </li> <li> <p>Instancier le joueur Nans_DUCUING, joueur de 27 ans \u00e9voluant \u00e0 l'UBB. <pre><code>\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction prenant en param\u00e8tres deux joueurs de la classe <code>Joueur</code> et renvoyant le nom du joueur le plus \u00e2g\u00e9, ou celui des deux joueurs dans le cas d'une \u00e9galit\u00e9 d'\u00e2ge. <pre><code>def compare(joueur1, joueur2) :\n</code></pre></p> </li> </ol>"},{"location":"SD/Evaluation_1/#programmation-recursive","title":"Programmation r\u00e9cursive :","text":""},{"location":"SD/Evaluation_1/#exercice-1_1","title":"Exercice 1 :","text":"<p>On consid\u00e8re la fonction<code>mystere(n)</code> d\u00e9finit par le code : <pre><code>def mystere(n):\n    if n == 0:\n        return 1\n    else:\n        return n * mystere(n-1)\n</code></pre> 1. Quel est le r\u00e9sultat renvoy\u00e9 par <code>mystere(4)</code> ? .......................................................</p> <ol> <li> <p>D\u00e9crire, en fran\u00e7ais, ce que fait cette fonction :     ...........................................................................................................................................................     ...........................................................................................................................................................     ...........................................................................................................................................................</p> </li> <li> <p>Proposer une version it\u00e9rative document\u00e9e pour cette fonction : <pre><code>def mystere(n :    ) -&gt;     :\n'''\n\n\n\n\n    '''\n\n\n\n\n\n\n    return \n</code></pre></p> </li> </ol>"},{"location":"SD/Evaluation_1/#exercice-2_1","title":"Exercice 2 :","text":"<p>On consid\u00e8re la fonction<code>sigma(n)</code> d\u00e9finit par le code : <pre><code>def sigma(n):\n    resultat = 0\n    for i in range(n+1) :\n        resultat = resultat + i\n    return resultat\n</code></pre> 1. Quel est le r\u00e9sultat renvoy\u00e9 par <code>sigma(0)</code> ? .......................................................</p> <ol> <li> <p>Quel est le r\u00e9sultat renvoy\u00e9 par <code>sigma(4)</code> ? .......................................................</p> </li> <li> <p>D\u00e9crire, en fran\u00e7ais, ce que fait cette fonction :     ...........................................................................................................................................................     ...........................................................................................................................................................     ...........................................................................................................................................................</p> </li> <li> <p>Proposer une version r\u00e9cursive document\u00e9e pour cette fonction : <pre><code>def sigma(n :    ) -&gt;     :\n'''\n\n\n\n\n    '''\n</code></pre></p> </li> </ol>"},{"location":"SD/Evaluation_1/#listes-chainees","title":"Listes chain\u00e9es :","text":"<p>On consid\u00e8re des listes cha\u00een\u00e9es, avec la liste vide not\u00e9e <code>nil</code> et les fonctions suivantes :</p> Fonction Description <code>tete(liste)</code> Renvoie la valeur du premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>queue(liste)</code> Renvoie la liste sur laquelle pointe le premier maillon de <code>liste</code>, qui ne doit pas \u00eatre vide. <code>cons(valeur, liste)</code> Renvoie une nouvelle liste correspondant \u00e0 l\u2019ajout de <code>valeur</code> en d\u00e9but de <code>liste</code>. <code>est_vide(liste)</code> Renvoie un bool\u00e9en indiquant si <code>liste</code> est vide ou non. <p>Le sch\u00e9ma suivant correspond \u00e0 la repr\u00e9sentation en m\u00e9moire des listes cha\u00een\u00e9es <code>l1</code>, <code>l2</code>, <code>l3</code> et <code>l4</code>.</p> <p></p>"},{"location":"SD/Evaluation_1/#exercice-1_2","title":"Exercice 1 :","text":"<p>Pour chacune des commandes suivantes, indiquer la r\u00e9ponse obtenue.</p> <ol> <li><code>tete(l2)</code> :  ...........................</li> <li><code>queue(l1)</code>:  ...........................</li> <li><code>est_vide(queue(l1))</code>:  ...........................</li> <li><code>tete(queue(queue(queue(l4))))</code>:  ...........................</li> <li><code>est_vide(queue(queue(l2)))</code>:  ...........................</li> </ol>"},{"location":"SD/Evaluation_1/#exercice-2_2","title":"Exercice 2 :","text":"<p>L'instruction <code>l1 = cons(6, cons(1, cons(7, nil)))</code> d\u00e9finit la liste <code>l1</code>. Donner les d\u00e9finitions des listes <code>l2</code>, <code>l3</code> et <code>l4</code> \u00e0 l\u2019aide des fonctions <code>cons</code> et <code>queue</code> et en r\u00e9utilisant les listes d\u00e9j\u00e0 d\u00e9finies pour d\u00e9finir les suivantes : 1. <code>l2</code> = ............................................................................................................... 2. <code>l3</code> = ............................................................................................................... 3. <code>l4</code> = ...............................................................................................................</p>"},{"location":"SD/Evaluation_1/#exercice-3","title":"Exercice 3 :","text":"<p>En utilisant les fonctions donn\u00e9es ci-dessus,  proposer une version it\u00e9rative et une version r\u00e9cursive pour la fonction <code>longueur(liste)</code> qui renvoie la longueur de la liste cha\u00een\u00e9e <code>liste</code> telle que : <pre><code>&gt;&gt;&gt; longueur(nil)\n0\n&gt;&gt;&gt; longueur(cons(7, cons(0, cons(12, nil))))\n3\n</code></pre> <pre><code>def longueur(liste) : # version it\u00e9rative\n</code></pre> <pre><code>def longueur(liste) : # version r\u00e9cursive\n</code></pre></p>"}]}